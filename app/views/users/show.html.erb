<style media="print">
  
  #visualisation {
    display: none;
  }
  
  .screen {
    display: none;
  }
  
</style>

<style media="screen">
  
  .print {
    display: none;
  }
  
</style>

<% provide(:title, "BarCVVR Utilisateur "+@user.firstName) %>

<div class="row print">
  <div class="row">
    <div class="col s12 m10 l7">
      <%= image_tag "Header.svg" %>
    </div>
  </div>
  <h3><b>Facture de <%= @user.firstName %> <%= @user.lastName %></b></h3>
</div>

<h3 class="screen"><b><%= @user.firstName %> <%= @user.lastName %></b></h3>

<h6 class="screen">
  Total</td> : <%= @user.amount %>€, <%= @user.email %>
</h6>

<div class="row screen">
  <div class="input-field col s6">
    
    <button class="btn-floating waves-effect light-blue" onclick="window.location.href='/operations/add?userid=<%=@user.id%>'">
      <i class="material-icons">euro_symbol</i>
    </button>

    <button class="btn-floating waves-effect light-blue" onclick="window.location.href='/users/<%=@user.id%>/edit'">
      <i class="material-icons">edit</i>
    </button>

    <svg width="0px" id="visualisation"></svg>

    <h5> Les 5 dernières opérations : </h5>
    <% i = 0
    @operations.first(5).each do |operation| %>
      <h6 id=h6_<%= i %> style="margin-left: 30px;"><%= operation.date %> : <%= number_with_precision(operation.sum, precision: 2).sub(/\.00$/,'') %>€</h6>
    <% i = i + 1 
    end %>

    <table id="opTable" style="display:none">
      <thead>
        <tr>
          <th>Date</th>
          <th>Somme</th>
        </tr>
      </thead>

      <tbody>
        <% @operations.each do |operation| %>
          <tr>
            <td><%= operation.date %></td>
            <td><%= operation.sum %></td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
</div>

<div class="row print">
  <table class="col s12 centered highlight striped tablesorter" id="Table">
    <thead>
      <tr>
        <th>Date</th>
        <th>Boisson</th>
        <th>Nombre de Boisson</th>
        <th>Plat</th>
        <th>Nombre de Plat</th>
        <th>Somme</th>
      </tr>
    </thead>

    <tbody>
      <% @operations.each do |operation| %>
        <tr>
          <td><%= operation.date %></td>
          <td>
            <% if operation.drink_id %>
              <%= Drink.find(operation.drink_id).name %>
            <% end %>
          </td>
          <td>
            <% if operation.drink_id %>
              <%= operation.numberDrink.to_i %> x <%= Drink.find(operation.drink_id).price %>€
            <% end %>
          </td>
          <td>
            <% if operation.food_id %>
              <%= Food.find(operation.food_id).name %>
            <% end %>
          </td>
          <td>
            <% if operation.food_id %>
              <%= operation.numberFood.to_i %> x <%= Food.find(operation.food_id).price %>€
            <% end %>
          </td>
          <td><%= operation.sum %>€</td>
        </tr>
      <% end %>
      <tr>
        <th></th>
        <th></th>
        <th></th>
        <th></th>
        <th><h4>Total</h4></th>
        <th><h4><%= @user.amount %>€</h4></th>
      </tr>
    </tbody>
  </table>
</div>


<script>
<% if notice %>
Materialize.toast('<%= notice %>', 4000) // 4000 is the duration of the toast
<% end %>

for (i = 0; i < 5; i++) {
  if (document.getElementById("h6_"+i)) {
    date = new Date(/^([0-9\-\s\:]+UTC)/.exec(document.getElementById("h6_"+i).innerHTML)[0]);
    document.getElementById("h6_"+i).innerHTML = date.toLocaleString() + /\s\:\s.*$/.exec(document.getElementById("h6_"+i).innerHTML)[0];
  }
}
compte = <%= @user.amount %>
data = new Array();
table = document.getElementById("opTable");
tr = table.getElementsByTagName("tr");
for (i = tr.length -1; tr[i]; i--) {
  td = tr[i].getElementsByTagName("td")[0];
  td1 = tr[i].getElementsByTagName("td")[1];
  if (td) {
    date = new Date(td.innerHTML);
    dataTemp = new Object();
    dataTemp.date = date;
    if (i == tr.length -1) {
        dataTemp.close = parseFloat(<%= @user.initAmount %>) + parseFloat(td1.innerHTML);
    } else {
      dataTemp.close = data[data.length-1].close + parseFloat(td1.innerHTML);
    }
    data.push(dataTemp);
    td.innerHTML = date.toLocaleString()
  }
}

var margin = {top: 20, right: 100, bottom: 30, left: 100},
  width = $(window).width() - margin.left - margin.right - 66,
  height = 250 - margin.top - margin.bottom;

var parseDate = d3.time.format("%d-%b-%y").parse,
  bisectDate = d3.bisector(function(d) { return d.date; }).left,
  formatValue = d3.format(",.2f"),
  formatCurrency = function (d){return formatValue(d);};
  //formatCurrency = function(d) { return formatValue(d); };

var x = d3.time.scale()
  .range([0, width]);

var y = d3.scale.linear()
  .range([height, 0]);

var xAxis = d3.svg.axis()
  .scale(x)
  .orient("bottom");

var yAxis = d3.svg.axis()
  .scale(y)
  .orient("left");

var line = d3.svg.line()
  .interpolate("step-after")
  .x(function(d) { return x(d.date); })
  .y(function(d) { return y(d.close); });

var svg = d3.select("svg")
  .attr("width", width + margin.left + margin.right)
  .attr("height", height + margin.top + margin.bottom)
  .append("g")
  .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

data.sort(function(a, b) {
  return a.date - b.date;
});

x.domain([data[0].date, data[data.length - 1].date]);
y.domain(d3.extent(data, function(d) { return d.close; }));

svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + height + ")")
    .call(xAxis);

svg.append("g")
    .attr("class", "y axis")
    .call(yAxis)
  .append("text")
    .attr("transform", "rotate(-90)")
    .attr("y", 6)
    .attr("dy", ".71em")
    .style("text-anchor", "end")
    .text("");

svg.append("path")
    .datum(data)
    .attr("class", "line")
    .attr("d", line);

    
var focus = svg.append("g")
  .attr("class", "focus")
  .style("display", "none");

focus.append("circle")
  .attr("r", 4.5);

focus.append("text")
  .attr("x", 9)
  .attr("dy", "-1em");

svg.append("rect")
  .attr("class", "overlay")
  .attr("width", width)
  .attr("height", height)
  .on("mouseover", function() { focus.style("display", null); })
  .on("mouseout", function() { focus.style("display", "none"); })
  .on("mousemove", mousemove);

function mousemove() {
  var x0 = x.invert(d3.mouse(this)[0]),
    i = bisectDate(data, x0, 1),
    d0 = data[i - 1],
    d1 = data[i],
    d = x0 - d0.date > d1.date - x0 ? d1 : d0;
  focus.attr("transform", "translate(" + x(d.date) + "," + y(d.close) + ")");
  date = new Date(d.date);
  focus.select("text").text(date.toLocaleDateString()+" "+d.close+"€");
}


</script>

<style>
  .redButton{
    color: rgb(255, 69, 0)
  }
  .greenButton{
    color: rgb(107, 142, 35)
  }
  body {
    font: 10px sans-serif;
  }
  .axis path,
  .axis line {
    fill: none;
    stroke: #000;
    shape-rendering: crispEdges;
  }
  .x.axis path {
    display: none;
  }
  .line {
    fill: none;
    stroke: steelblue;
    stroke-width: 1.5px;
  }
  .overlay {
    fill: none;
    pointer-events: all;
  }
  .focus circle {
    fill: none;
    stroke: steelblue;
  }
  #container {
    position: absolute;
    top: 40%;
  }
</style>
